% syms z
% sys_N = 0.00083315 * (z + 0.9604) * (z^2 - 1.981*z + 0.9918) * (z^2 - 1.874*z + 0.9747);
% sys_D = (z-0.9994) * (z-1) * (z^2 -1.978*z + 0.9894) * (z^2 + -1.738*z + 0.8672);


% 
% fed_N = 12.3359 * (z - 0.9874) * (z - 0.9577) * (z - 0.945);
% fed_D = (z - 0.9991) - (z - 0.9174) * (z - 0.9164);

Ts = 0.001;
system_num = [8.331499999999999e-04 -0.002411635990000 0.001646764298800    0.001386774757085   -0.002226794738657           7.735179924151595e-04];
system_den = [1   -5.715400000000000   13.723534400000000  -17.734220581599999   13.016931722320001   -5.148338416112000    0.857492875392000];

feedback_num = [  12.335900000000001  -35.651984590000005   34.340092218032005  -11.023646014692989 ];
feedback_den = [-1    2.833800000000000   -1.839805360000000];


system_transfer = tf(system_num,system_den);
feedback_transfer = tf(feedback_num,feedback_den);
overall_system = system_transfer * feedback_transfer;

sysc = overall_system;
sysd = c2d(sysc,Ts,'ZOH');

% Get state space values for ILC
[Ad, Bd, Cd, Dd] = ssdata(sysd);

% Initial condition x0, time range t - assume 1 second, pure time delay n0, relative
% degree r, and matrix size N
x0 = 0;
t = 0:Ts:1;
n0 = 0;
r = 1;
N = length(t);

% Define input vector U and reference J - Refernce = input for this example
Rj = [.05*ones(1,200) 2*ones(1,200) 4*ones(1,200) 5*ones(1,200) 0*ones(1,201)]';
U = Rj;

% G0 not formulated as initial condition is 0

% Formulate G
Gvec = zeros(N,1);
rVec = ((r-1):(N-n0-1))';

for ii = 1:length(rVec)
    ApowVec = Ad^rVec(ii);
    Gvec(ii) = Cd*ApowVec*Bd;
end

G = tril(toeplitz(Gvec));

% Set up ILC
jmax = 15;

l0 = 0.95; L = l0 * eye(N,N);
q0 = 1.00; Q = q0 * eye(N,N);

Uj = zeros(N,1); Ujold = Uj;
Ej = zeros(N,1); Ejold = Ej;

% Run ILC and plot the response for each iteration
for ii = 1:jmax
    Uj = Q*Ujold + L*Ejold;
    Yj = G*Uj;

    Ej = Rj - Yj; Ej(1) = 0;

    Ejold = Ej;
    Ujold = Uj;

    plotter(ii,t,Ej,Yj,Uj,Rj,U)
end
